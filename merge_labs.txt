Actual git merge on local laptop - Allready DONE
=================================================
create git repository iPhone_store
cd iPhone_store
create 3 files in main branch : android.txt, iPhone.txt, windows.txt
update the file iPhone.tct to include 3 iPhone versions
add, commit and push to main
create new branch by running command ::
git checkout -b feature_iphone
update the file iPhone.txt with new version of iPhone
git add, git commit
checkout to main branch and update the file iPhone.txt - add new iPhone version - different one 
git add, git commit
merge the branch feature_iphone by runnin g command:
git merge feature_iphone
solve the conflict by using visual code
To view the changes run command: 
git log --oneline --graph --all

Git Rebase
===========
To be done in site: http://git-school.github.io/visualizing-git

git commit
git commit
git checkout HEAD~2
git checkout -b feature
git commit
git commit
git rebase master

Open the cli of Git Bash and do the below commands
=================================================
git clone https://github.com/yehuda-baruchi/atech-dev4.git
git pull
git branch
git checkout bugfix01
ls
mkdir exercise-05
cd exercise-05
echo "test02" >> mergefile02.txt
ls -ltra
cat mergefile02.txt
git add -A                    # Adding new files and folders
git commit -m "test02"
git push
git checkout main
git fetch                                    # See the diff before merge
git diff main origin/main
git merge bugfix01
git push


Git conflict merge
===================
Go to the bugfix01 branch and add test03 in line 2 in file mergefile02.txt
git add mergefile02.txt
git commit -m "update mergefile02.txt in bugfix01 branch"
Switch to main branch and add "test04 was added in branch main"  in line 2 in file mergefile02.txt
git add mergefile02.txt
git commit -m "update mergefile02.txt in main branch"
run the merge command
git merge bugfix01             
# you should got the error below
  Auto-merging exercise-05/mergefile02.txt
  CONFLICT (content): Merge conflict in exercise-05/mergefile02.txt
  Automatic merge failed; fix conflicts and then commit the result.


lets fix the Confilct of merge
using visual code edit the file mergefile02.txt
and solve the conflict

After saving the file, run commands:
git add mergefile02.txt
git commit -m "solve merge"


Run commands:
=============
git add -A
git commit -m "fix conflict"
git merge bugfix01
cat mergefile02.txt
git pull
git push

git rebase:
===========
vi rebasefile01.txt
git add -A
git commit -m "new rebasefile01"
git log --graph --pretty='%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' rebasefile01.txt
vi rebasefile01.txt
git add -A
git commit -m "new rebasefile01 with new line"
ls
git log --graph --pretty='%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' rebasefile01.txt
git checkout main
ls
git rebase bugfix01                          # now we can see the new rebasefile01.txt
ls
gitk
gitk --all
git log --graph --pretty='%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' rebasefile01.txt
git log --graph --pretty='%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --all



